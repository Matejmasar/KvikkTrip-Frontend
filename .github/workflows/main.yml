name: Frontend pipeline

on:
  # Run for every push event
  push:
  # Run for pull requests (excluding drafts)
  pull_request:
    types: [ opened, reopened, closed ]

jobs:
  # Install dependencies
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install Node.js 
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Install dependencies using npm
      - name: Install dependencies
        run: npm install

      # Cache dependencies
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

  # Run ESLint
  eslint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      # Use cached dependencies
      - name: Use cached dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}

      - name: Run ESLint
        run: npm run lint 

  # Build the project
  build:
    runs-on: ubuntu-latest
    needs: [ setup, eslint ]
    steps:
      - uses: actions/checkout@v4

       # Use cached dependencies
      - name: Use cached dependencies
        uses: actions/cache@v4
        with:
         path: node_modules
         key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
         
      - name: Build the project
        run: npm run build

  # Run unit tests
  test:
    runs-on: ubuntu-latest
    needs: [ setup, build ]
    steps:
      - uses: actions/checkout@v4

       # Use cached dependencies
      - name: Use cached dependencies
        uses: actions/cache@v4
        with:
         path: node_modules
         key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
         
      - name: Run tests
        run: npm test
        
  # Job to run SonarQube analysis
  sonarcloud:
    runs-on: ubuntu-latest
    needs: eslint
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clone improves report relevancy
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=kvikktrip
            -Dsonar.projectKey=kvikktrip_kvikktrip-frontend
